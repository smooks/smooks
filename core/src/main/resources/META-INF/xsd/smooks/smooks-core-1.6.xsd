<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="https://www.smooks.org/xsd/smooks/smooks-core-1.6.xsd"
           elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:smooks="https://www.smooks.org/xsd/smooks-2.0.xsd"
           xmlns:smooks-core="https://www.smooks.org/xsd/smooks/smooks-core-1.6.xsd">

    <xs:import namespace="https://www.smooks.org/xsd/smooks-2.0.xsd"/>

    <xs:annotation>
        <xs:documentation xml:lang="en">Smooks Core Settings Configuration</xs:documentation>
    </xs:annotation>

    <xs:element name="filterSettings" type="smooks-core:filterSettings" substitutionGroup="smooks:abstract-resource-config" >
    	<xs:annotation>
    		<xs:documentation>Smooks Filter Settings Settings</xs:documentation>
    	</xs:annotation>
    </xs:element>
    
    <xs:element name="exports" type="smooks-core:exports" substitutionGroup="smooks:abstract-resource-config" >
    	<xs:annotation>
    		<xs:documentation>Smooks Exports Settings</xs:documentation>
    	</xs:annotation>
    </xs:element>

    <xs:element name="namespaces" type="smooks-core:namespaces" substitutionGroup="smooks:abstract-resource-config">
        <xs:annotation>
            <xs:documentation>Namespace Declarations</xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="interceptors" type="smooks-core:interceptors" substitutionGroup="smooks:abstract-resource-config">
        <xs:annotation>
            <xs:documentation>Interceptor Declarations</xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="terminate" type="smooks-core:terminate" substitutionGroup="smooks:abstract-resource-config">
		<xs:annotation>
    		<xs:documentation xml:lang="en">
    			Terminate filtering on visiting the targeted fragment (before/after - default after).
    		</xs:documentation>
    	</xs:annotation>
	</xs:element>

    <xs:complexType name="filterSettings">
    	<xs:complexContent>
    		<xs:extension base="smooks:abstract-resource-config">
		        <xs:attribute name="type" type="smooks-core:filterType">
			        <xs:annotation>
			            <xs:documentation>Filter Type</xs:documentation>
			        </xs:annotation>
		        </xs:attribute>
		        <xs:attribute name="defaultSerialization" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Default Serialization</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		        <xs:attribute name="terminateOnException" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Terminate Filtering on Exception</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		        <xs:attribute name="closeSource" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Close Filter Source (Stream Sources only)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
		        <xs:attribute name="closeResult" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Close Filter Result (Stream Results only)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="rewriteEntities" type="xs:boolean" >
                    <xs:annotation>
                        <xs:documentation>Rewrite Entities</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="readerPoolSize" type="xs:int" >
                    <xs:annotation>
                        <xs:documentation>
                        Reader Pool Size.
                        <p/>  
                        Some Reader implementations are expensive to create. Pooling them can give a
                        huge performance boost.  Assign based on your applications threading model.
                        <p/>
                        Default pool size is 0 i.e. a new Reader will be created for every message.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
    		</xs:extension>
    	</xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="filterType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="DOM"/>
            <xs:enumeration value="SAX NG"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:complexType name="exports">
        <xs:complexContent>
            <xs:extension base="smooks:abstract-resource-config">
                <xs:sequence>
                    <xs:element name="result" type="smooks-core:result" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="smooks" type="smooks-core:smooks" substitutionGroup="smooks:abstract-resource-config"/>
    
    <xs:complexType name="smooks">
        <xs:complexContent>
            <xs:extension base="smooks:element-visitor" >
                <xs:sequence>
                    <xs:element name="action" type="smooks-core:action" minOccurs="0" />
                    <xs:element name="config" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element ref="smooks:smooks-resource-list"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute type="xs:string" name="filterSourceOn" use="required"/>
                <xs:attribute type="xs:unsignedInt" name="maxNodeDepth" default="1"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="action">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                The &lt;use&gt; element allows you to define how the templating result is to be used.
            </xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="1">
            <xs:element name="inline" type="smooks-core:inline" />
            <xs:element name="bindTo" type="smooks-core:bindTo" />
            <xs:element name="outputTo" type="smooks-core:outputTo" />
        </xs:choice>
    </xs:complexType>

    <xs:element name="directive" abstract="true"/>

    <xs:complexType name="inline">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Inline the result into the <b>Smooks.filter</b> Result message.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="smooks-core:directive"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:element name="replace" substitutionGroup="smooks-core:directive"/>
    <xs:element name="prepend-before" substitutionGroup="smooks-core:directive"/>
    <xs:element name="prepend-after" substitutionGroup="smooks-core:directive"/>
    <xs:element name="append-before" substitutionGroup="smooks-core:directive"/>
    <xs:element name="append-after" substitutionGroup="smooks-core:directive"/>
    
    <xs:complexType name="bindTo">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Bind the templating result into the bean context under the specified "id".  This makes the
                templating result available for routing or other operations.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation xml:lang="en">
                    The bean context ID under which the templating result is to be bound if the "BIND_TO" action is chosen.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="outputTo">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Output the templating result to a named OutputStreamResource.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="outputStreamResource" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation xml:lang="en">
                    The name of the "outputStreamResource" to which the templating result is to be written.  By default,
                    the templating result is written to the  Smooks.filter result if (if a StreamResult is provided).
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="result">
        <xs:annotation>
            <xs:documentation xml:lang="en">Result that Smooks exports</xs:documentation>
        </xs:annotation>
        <xs:attribute name="type" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation xml:lang="en">
                    Type fully qualifed class of the type that will be produced by this Smooks configuration.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="name" type="xs:string">
            <xs:annotation>
                <xs:documentation xml:lang="en">
                    A name that can be used to identify this result type.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="extract" type="xs:string">
            <xs:annotation>
                <xs:documentation xml:lang="en">
                    This can be any string and is used when only a portion of a result should be returned. For
                    example, when you return a JavaResult you may only be interested in one bean and in this 
                    case the extract attribute would specify the beanId of that bean.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="namespaces">
        <xs:complexContent>
            <xs:extension base="smooks:abstract-resource-config">
                <xs:sequence>
                    <xs:element name="namespace" type="smooks-core:namespace" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="namespace">
        <xs:annotation>
            <xs:documentation xml:lang="en">Namespace prefix-to-uri mapping</xs:documentation>
        </xs:annotation>
        <xs:attribute name="prefix" type="xs:string" use="required" />
        <xs:attribute name="uri" type="xs:anyURI" use="required" />
    </xs:complexType>

    <xs:complexType name="interceptors">
        <xs:complexContent>
            <xs:extension base="smooks:abstract-resource-config">
                <xs:sequence>
                    <xs:element name="interceptor" type="smooks-core:interceptor" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="interceptor">
        <xs:attribute name="class" type="xs:string" use="required"/>
        <xs:attribute name="selector" type="xs:string"/>
    </xs:complexType>
    
    <xs:complexType name="terminate">
    	<xs:complexContent>
    		<xs:extension base="smooks:element-visitor">
    			<xs:attribute name="onElement" type="xs:string" use="required" >
					<xs:annotation>
			    		<xs:documentation xml:lang="en">
			    			The element on which the filter termination is to happen.
			    		</xs:documentation>
			    	</xs:annotation>
    			</xs:attribute>
    			<xs:attribute name="terminateBefore" type="xs:boolean" use="optional" default="false">
    				<xs:annotation>
			    		<xs:documentation xml:lang="en">
    						Terminate filtering on the visitBefore event.  Default false.
						</xs:documentation>
			    	</xs:annotation>
    			</xs:attribute>
    		</xs:extension>
    	</xs:complexContent>
    </xs:complexType>

    <xs:element name="rewrite" substitutionGroup="smooks:abstract-reader">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="smooks:abstract-reader">
                    <xs:annotation>
                        <xs:documentation xml:lang="en">Stream Reader</xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element ref="smooks:abstract-resource-config" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="echo" type="smooks-core:echo" substitutionGroup="smooks:abstract-resource-config" >
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Serializes each event. Useful for no-op in pipelines.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:complexType name="echo">
        <xs:complexContent>
            <xs:extension base="smooks:abstract-resource-config"/>
        </xs:complexContent>
    </xs:complexType>

</xs:schema>