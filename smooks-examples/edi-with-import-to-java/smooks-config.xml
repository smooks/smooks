<?xml version="1.0"?>
<smooks-resource-list
	xmlns="http://www.milyn.org/xsd/smooks-1.1.xsd"
	xmlns:edi="http://www.milyn.org/xsd/smooks/edi-1.1.xsd"
	xmlns:jb="http://www.milyn.org/xsd/smooks/javabean-1.2.xsd">

    <!--
    Configure the EDI Reader to parse the message stream into a stream of SAX events.
    -->
    <edi:reader mappingModel="/example/edi-to-xml-order-mapping.xml" />

    <!--
    Create an "example.beans.Order" bean instance when we visit the start of the <order> element.
    Assign the new bean instance to the beanId of "order".
    The "header" and "orderItemList" beans are wired in.
    -->
    <jb:bean beanId="order" class="example.model.Order" createOnElement="Order">
        <jb:wiring property="header" beanIdRef="header" />
        <jb:wiring property="orderItems" beanIdRef="orderItemList" />
    </jb:bean>

    <!--
    Create an "example.beans.Header" bean instance when we visit the start of the <order> element.
    Note, we're creating this bean instance before we encounter the actual <header> element.
    This bean is wired into the "order" bean.
    -->
    <jb:bean beanId="header" class="example.model.Header" createOnElement="Order">
        <jb:wiring property="customer" beanIdRef="customer" />
        <jb:value property="orderId" data="header/order-id" />
        <jb:value property="orderStatus" decoder="Long" data="header/status-code" />
        <jb:value property="netAmount" decoder="BigDecimal" data="header/net-amount" />
        <jb:value property="totalAmount" decoder="BigDecimal" data="header/total-amount" />
        <jb:value property="tax" decoder="BigDecimal" data="header/tax" />
        <jb:value property="date" decoder="Date" data="header/date">
            <jb:decodeParam name="format">yyyyMMdd</jb:decodeParam>
        </jb:value>
    </jb:bean>

    <!--
    Create an "example.beans.Customer" bean instance when we visit the start of the
    <customer-details> element.
	This bean is wired into the "header" bean.
    -->
    <jb:bean beanId="customer" class="example.model.Customer" createOnElement="customer-details">
        <!-- Customer bindings... -->
        <jb:value property="userName" data="customer-details/username" />
        <jb:value property="firstName" data="customer-details/name/firstname" />
        <jb:value property="lastName" data="customer-details/name/lastname" />
        <jb:value property="state" data="customer-details/state" />
    </jb:bean>

	<!--
	Create an ArrayList when we visit the start of the <order> element.
	The "orderItem" beans are wired into this list and this list is wired into the "order" bean.
	 -->
    <jb:bean beanId="orderItemList" class="java.util.ArrayList" createOnElement="Order">
        <jb:wiring beanIdRef="orderItem" />
    </jb:bean>

    <!--
    Create an "example.beans.OrderItem" bean instance when we visit the start of the <order-item> element.
    This bean is wired into the "orderItemList" ArrayList.
    -->
    <jb:bean beanId="orderItem" class="example.model.OrderItem" createOnElement="order-item">
        <!-- OrderItem bindings... -->
        <jb:value property="quantity" decoder="Integer" data="order-item/quantity" />
        <jb:value property="productId" decoder="String" data="order-item/product-id" />
        <jb:value property="price" decoder="BigDecimal" data="order-item/price" />
        <jb:value property="title" data="order-item/title" />
    </jb:bean>

</smooks-resource-list>
