<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="https://www.smooks.org/xsd/smooks/jms-routing-1.3.xsd"
           elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:smooks="https://www.smooks.org/xsd/smooks-1.2.xsd"
           xmlns:smooks-jms-routing="https://www.smooks.org/xsd/smooks/jms-routing-1.3.xsd">

    <xs:import namespace="https://www.smooks.org/xsd/smooks-1.2.xsd"/>

    <xs:annotation>
        <xs:documentation xml:lang="en">Smooks JMS Routing Configuration</xs:documentation>
    </xs:annotation>


    <xs:element name="router" type="smooks-jms-routing:router" substitutionGroup="smooks:abstract-resource-config">
		<xs:annotation>
	   		<xs:documentation xml:lang="en">
	   			JMS router configuration
    			The JMS router routes messages to a JMS destination (Queue or Topic).
    			The message payload is created from a bean out of the bean context. It is possible
    			to send Text or Object messages. The correlation id can be generated out of a FreeMarker
    			template.
	   		</xs:documentation>
	   	</xs:annotation>
    </xs:element>

    <xs:complexType name="router">
    	<xs:annotation>
    		<xs:documentation xml:lang="en">
    			JMS Router
    		</xs:documentation>
    	</xs:annotation>
    	<xs:complexContent>
    		<xs:extension base="smooks:element-visitor">
    			<xs:sequence>
    				<xs:element name="message" type="smooks-jms-routing:message" minOccurs="0" maxOccurs="1">
    					<xs:annotation>
				    		<xs:documentation xml:lang="en">
								The message configuration.
				    		</xs:documentation>
				    	</xs:annotation>
    				</xs:element>
    				<xs:element name="connection" type="smooks-jms-routing:connection" minOccurs="0" maxOccurs="1" >
    					<xs:annotation>
				    		<xs:documentation xml:lang="en">
								The JMS connection configuration.
				    		</xs:documentation>
				    	</xs:annotation>
    				</xs:element>
    				<xs:element name="session" type="smooks-jms-routing:session" minOccurs="0" maxOccurs="1" >
    					<xs:annotation>
				    		<xs:documentation xml:lang="en">
								The JMS session configuration.
				    		</xs:documentation>
				    	</xs:annotation>
    				</xs:element>
					<xs:element name="jndi" type="smooks-jms-routing:jndi" minOccurs="0" maxOccurs="1" >
    					<xs:annotation>
				    		<xs:documentation xml:lang="en">
								The JNDI configuration.
				    		</xs:documentation>
				    	</xs:annotation>
    				</xs:element>
    				<xs:element name="highWaterMark" type="smooks-jms-routing:highWaterMark" minOccurs="0" maxOccurs="1" >
    					<xs:annotation>
				    		<xs:documentation xml:lang="en">
								The configuration for the max number of messages that can be sitting in the
								JMS Destination at any any time.
				    		</xs:documentation>
				    	</xs:annotation>
    				</xs:element>
    			</xs:sequence>
    			<xs:attribute name="routeOnElement" type="xs:string" use="required">
   					<xs:annotation>
			    		<xs:documentation xml:lang="en">
							The element to route on.
			    		</xs:documentation>
			    	</xs:annotation>
   				</xs:attribute>
   				<xs:attribute name="routeOnElementNS" type="xs:string" use="optional" >
    				<xs:annotation>
			    		<xs:documentation xml:lang="en">
			    			The namespace of the routeOnElement element.
			    		</xs:documentation>
			    	</xs:annotation>
    			</xs:attribute>
    			<xs:attribute name="beanId" type="xs:string" use="required">
   					<xs:annotation>
			    		<xs:documentation xml:lang="en">
							The beanId of the bean from the bean context to be used as message payload.
			    		</xs:documentation>
			    	</xs:annotation>
   				</xs:attribute>
    			<xs:attribute name="destination" type="xs:string" use="required">
   					<xs:annotation>
			    		<xs:documentation xml:lang="en">
							The JMS destination string
			    		</xs:documentation>
			    	</xs:annotation>
   				</xs:attribute>
    			<xs:attribute name="executeBefore" type="xs:boolean" use="optional" default="false">
   					<xs:annotation>
			    		<xs:documentation xml:lang="en">
							If the routing is done before or after the selected element. Default is 'false'.
			    		</xs:documentation>
			    	</xs:annotation>
   				</xs:attribute>
    		</xs:extension>
    	</xs:complexContent>
    </xs:complexType>

    <xs:complexType name="message">
    	<xs:annotation>
    		<xs:documentation xml:lang="en">
				The message configuration.
    		</xs:documentation>
    	</xs:annotation>
    	<xs:sequence>
			<xs:element name="correlationIdPattern" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
			  		<xs:documentation xml:lang="en">
						JMS Correlation pattern that will be used for the outgoing message.
						Templating support is available via the FreeMarker template engine.
			  		</xs:documentation>
			  	</xs:annotation>
			</xs:element>
		</xs:sequence>
        <xs:attribute name="type" type="smooks-jms-routing:messageType" use="optional" default="TextMessage">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The type of JMS Message that should be sent. 'TextMessage'(default) or 'ObjectMessage'.
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    	<xs:attribute name="deliveryMode" type="smooks-jms-routing:deliveryMode" use="optional" default="persistent">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The JMS DeliveryMode. 'persistent'(default) or 'non-persistent'.
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    	<xs:attribute name="priority" type="xs:int" use="optional" default="4">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The JMS Priority to be used
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    	<xs:attribute name="timeToLive" type="xs:long" use="optional" default="0">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The JMS Time-To-Live to be used.
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    </xs:complexType>

    <xs:complexType name="connection">
   	 	<xs:annotation>
    		<xs:documentation xml:lang="en">
				The JMS connection configuration.
    		</xs:documentation>
    	</xs:annotation>
        <xs:attribute name="factory" type="xs:string" use="optional" default="ConnectionFactory">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The ConnectionFactory to look up
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    	<xs:attribute name="securityPrincipal" type="xs:string" use="optional">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The security principal use when creating the JMS connection.
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    	<xs:attribute name="securityCredential" type="xs:string" use="optional">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The security credentials to use when creating the JMS connection.
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    </xs:complexType>

    <xs:complexType name="session">
		<xs:annotation>
    		<xs:documentation xml:lang="en">
				The JMS session configuration.
    		</xs:documentation>
    	</xs:annotation>
        <xs:attribute name="transacted" type="xs:boolean" use="optional" default="false">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					Determines if the session should be transacted. Defaults to 'false'.
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    	<xs:attribute name="acknowledgeMode" type="smooks-jms-routing:acknowledgeMode" use="optional" default="AUTO_ACKNOWLEDGE">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The acknowledge mode to use. One of 'AUTO_ACKNOWLEDGE'(default), 'CLIENT_ACKNOWLEDGE', 'DUPS_OK_ACKNOWLEDGE'.
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    </xs:complexType>

    <xs:complexType name="jndi">
		<xs:annotation>
    		<xs:documentation xml:lang="en">
				The JNDI configuration.
    		</xs:documentation>
    	</xs:annotation>
        <xs:attribute name="properties" type="xs:string" use="optional">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
			        A .properties file containing the JNDI properties to be used for JMS resource
                    lookups.
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
        <xs:attribute name="contextFactory" type="xs:string" use="optional">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The JNDI ContextFactory to use
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    	<xs:attribute name="providerUrl" type="xs:string" use="optional">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The JNDI Provider URL to use.
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    	<xs:attribute name="namingFactory" type="xs:string" use="optional">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The JNDI NamingFactory to use
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    </xs:complexType>

    <xs:complexType name="highWaterMark">
		<xs:annotation>
    		<xs:documentation xml:lang="en">
				The configuration for the max number of messages that can be sitting in the
				JMS Destination at any any time.
    		</xs:documentation>
    	</xs:annotation>
        <xs:attribute name="mark" type="xs:int" use="optional" default="200">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The max number of messages that can be sitting in the JMS Destination at any any time. Default is 200.
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    	<xs:attribute name="timeout" type="xs:int" use="optional" default="60000">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The number of milliseconds to wait for the system to process JMS Messages from the JMS destination so that the
					number of JMS Messages drops below the highWaterMark. Default is 60000 ms.
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    	<xs:attribute name="pollFrequency" type="xs:int" use="optional" default="1000">
			<xs:annotation>
		 		<xs:documentation xml:lang="en">
					The number of milliseconds to wait between checks on the High Water Mark, while waiting for it to drop.
					Default is 1000 ms.
		 		</xs:documentation>
	 		</xs:annotation>
		</xs:attribute>
    </xs:complexType>

    <xs:simpleType name="acknowledgeMode">
		<xs:annotation>
    		<xs:documentation xml:lang="en">
				The possible JMS acknowledge modes
    		</xs:documentation>
    	</xs:annotation>
    	<xs:restriction base="xs:string">
    		<xs:enumeration value="AUTO_ACKNOWLEDGE">
    			<xs:annotation>
    				<xs:documentation xml:lang="en">
						With this acknowledgement mode, the session automatically acknowledges a client's receipt of a
						message when it has either successfully returned from a call to receive or the message listener
						it has called to process the message successfully returns.
    				</xs:documentation>
    			</xs:annotation>
    		</xs:enumeration>
    		<xs:enumeration value="CLIENT_ACKNOWLEDGE">
    			<xs:annotation>
    				<xs:documentation xml:lang="en">
						With this acknowledgement mode, the client acknowledges a message by calling a message's acknowledge method.
    				</xs:documentation>
    			</xs:annotation>
    		</xs:enumeration>
    		<xs:enumeration value="DUPS_OK_ACKNOWLEDGE">
    			<xs:annotation>
    				<xs:documentation xml:lang="en">
						This acknowledgement mode instructs the session to lazily acknowledge the delivery of messages.
    				</xs:documentation>
    			</xs:annotation>
    		</xs:enumeration>
    	</xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="messageType">
		<xs:annotation>
    		<xs:documentation xml:lang="en">
				The possible JMS message types.
    		</xs:documentation>
    	</xs:annotation>
    	<xs:restriction base="xs:string">
    		<xs:enumeration value="TextMessage">
    			<xs:annotation>
    				<xs:documentation xml:lang="en">
						A TextMessage is used to send a message containing a java.lang.String.
						To retrieve the string the cartridge calls the 'toString()' method of the target bean.
    				</xs:documentation>
    			</xs:annotation>
    		</xs:enumeration>
    		<xs:enumeration value="ObjectMessage">
    			<xs:annotation>
    				<xs:documentation xml:lang="en">
						An ObjectMessage is used to send a message that contains a serializable Java object.
						Only Serializable Java objects can be used.
    				</xs:documentation>
    			</xs:annotation>
    		</xs:enumeration>
    		<xs:enumeration value="MapMessage">
    			<xs:annotation>
    				<xs:documentation xml:lang="en">
						A MapMessage is used to send a set of name-value pairs where names are Strings and values are Java primitive types or Strings.
						Only Map Java objects can be used.
						For the keys of the map the 'toString()' method is called to retrieve the String representation.
						Objects that aren't primitive types or Strings get the toString() method called to return the String representation.
    				</xs:documentation>
    			</xs:annotation>
    		</xs:enumeration>
    	</xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="deliveryMode">
		<xs:annotation>
    		<xs:documentation xml:lang="en">
				The possible JMS delivery modes.
    		</xs:documentation>
    	</xs:annotation>
    	<xs:restriction base="xs:string">
    		<xs:enumeration value="persistent">
    			<xs:annotation>
    				<xs:documentation xml:lang="en">
						This mode instructs the JMS provider to log the message to stable storage as part of the client's send operation.
    				</xs:documentation>
    			</xs:annotation>
    		</xs:enumeration>
    		<xs:enumeration value="non-persistent">
    			<xs:annotation>
    				<xs:documentation xml:lang="en">
						This is the lowest overhead delivery mode because it does not require that the message be logged to stable storage.
    				</xs:documentation>
    			</xs:annotation>
    		</xs:enumeration>
    	</xs:restriction>
    </xs:simpleType>    

</xs:schema>